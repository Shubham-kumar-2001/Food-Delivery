[{"G:\\Udemy React\\food-order-project\\src\\index.js":"1","G:\\Udemy React\\food-order-project\\src\\App.js":"2","G:\\Udemy React\\food-order-project\\src\\Components\\Layout\\Header.jsx":"3","G:\\Udemy React\\food-order-project\\src\\Components\\Layout\\HeaderButton.jsx":"4","G:\\Udemy React\\food-order-project\\src\\Components\\Cart\\CartIcon.jsx":"5","G:\\Udemy React\\food-order-project\\src\\Components\\Meals\\Meals.jsx":"6","G:\\Udemy React\\food-order-project\\src\\Components\\Meals\\MealsSummary.jsx":"7","G:\\Udemy React\\food-order-project\\src\\Components\\Meals\\AvailableMeals.jsx":"8","G:\\Udemy React\\food-order-project\\src\\Components\\UI\\Card.jsx":"9","G:\\Udemy React\\food-order-project\\src\\Components\\Meals\\MealsItem\\MealItem.jsx":"10","G:\\Udemy React\\food-order-project\\src\\Components\\Meals\\MealsItem\\MealItemForm.jsx":"11","G:\\Udemy React\\food-order-project\\src\\Components\\UI\\Input.jsx":"12","G:\\Udemy React\\food-order-project\\src\\Components\\Cart\\Cart.jsx":"13","G:\\Udemy React\\food-order-project\\src\\Components\\UI\\Modal.jsx":"14","G:\\Udemy React\\food-order-project\\src\\store\\CartProvider.jsx":"15","G:\\Udemy React\\food-order-project\\src\\store\\cart-contex.jsx":"16","G:\\Udemy React\\food-order-project\\src\\Components\\Cart\\CartItem.jsx":"17","G:\\Udemy React\\food-order-project\\src\\Components\\Cart\\Checkout.jsx":"18","G:\\Udemy React\\food-order-project\\src\\Hooks\\use-input.jsx":"19"},{"size":142,"mtime":1616594953000,"results":"20","hashOfConfig":"21"},{"size":673,"mtime":1635434556797,"results":"22","hashOfConfig":"21"},{"size":573,"mtime":1635259261561,"results":"23","hashOfConfig":"21"},{"size":1178,"mtime":1635453293011,"results":"24","hashOfConfig":"21"},{"size":531,"mtime":1635245825901,"results":"25","hashOfConfig":"21"},{"size":292,"mtime":1635247708840,"results":"26","hashOfConfig":"21"},{"size":573,"mtime":1635246632091,"results":"27","hashOfConfig":"21"},{"size":2162,"mtime":1635450079480,"results":"28","hashOfConfig":"21"},{"size":249,"mtime":1635248071469,"results":"29","hashOfConfig":"21"},{"size":859,"mtime":1635266732912,"results":"30","hashOfConfig":"21"},{"size":1187,"mtime":1635267735764,"results":"31","hashOfConfig":"21"},{"size":325,"mtime":1635265349982,"results":"32","hashOfConfig":"21"},{"size":3358,"mtime":1635453103871,"results":"33","hashOfConfig":"21"},{"size":817,"mtime":1635259754295,"results":"34","hashOfConfig":"21"},{"size":2614,"mtime":1635451119934,"results":"35","hashOfConfig":"21"},{"size":209,"mtime":1635451119934,"results":"36","hashOfConfig":"21"},{"size":665,"mtime":1635268480816,"results":"37","hashOfConfig":"21"},{"size":3954,"mtime":1635451230480,"results":"38","hashOfConfig":"21"},{"size":760,"mtime":1635438691015,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"zwvfk3",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"G:\\Udemy React\\food-order-project\\src\\index.js",[],["80","81"],"G:\\Udemy React\\food-order-project\\src\\App.js",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Layout\\Header.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Layout\\HeaderButton.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Cart\\CartIcon.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Meals\\Meals.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Meals\\MealsSummary.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Meals\\AvailableMeals.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\UI\\Card.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Meals\\MealsItem\\MealItem.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Meals\\MealsItem\\MealItemForm.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\UI\\Input.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Cart\\Cart.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\UI\\Modal.jsx",[],"G:\\Udemy React\\food-order-project\\src\\store\\CartProvider.jsx",[],"G:\\Udemy React\\food-order-project\\src\\store\\cart-contex.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Cart\\CartItem.jsx",[],"G:\\Udemy React\\food-order-project\\src\\Components\\Cart\\Checkout.jsx",["82"],"import React, { useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\nimport useInput from \"../../Hooks/use-input\";\r\n\r\nconst isInputValid = (value) => value.trim() !== \"\";\r\nconst isPostalValid = (value) => value.trim().length === 6;\r\n\r\nconst Checkout = (props) => {\r\n  const {\r\n    value: nameInputValue,\r\n    isValid: nameInputIsValid,\r\n    hasError: nameHasError,\r\n    inputChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n    reset: nameReset,\r\n  } = useInput(isInputValid);\r\n  const {\r\n    value: cityInputValue,\r\n    isValid: cityInputIsValid,\r\n    hasError: cityHasError,\r\n    inputChangeHandler: cityChangeHandler,\r\n    inputBlurHandler: cityBlurHandler,\r\n    reset: cityReset,\r\n  } = useInput(isInputValid);\r\n  const {\r\n    value: postalCodeInputValue,\r\n    isValid: postalCodeInputIsValid,\r\n    hasError: postalCodeHasError,\r\n    inputChangeHandler: postalCodeChangeHandler,\r\n    inputBlurHandler: postalCodeBlurHandler,\r\n    reset: postalCodeReset,\r\n  } = useInput(isPostalValid);\r\n  const {\r\n    value: streetInputValue,\r\n    isValid: streetInputIsValid,\r\n    hasError: streetHasError,\r\n    inputChangeHandler: streetChangeHandler,\r\n    inputBlurHandler: streetBlurHandler,\r\n    reset: streetReset,\r\n  } = useInput(isInputValid);\r\n\r\n  const formValid =\r\n    nameInputIsValid &&\r\n    cityInputIsValid &&\r\n    postalCodeInputIsValid &&\r\n    streetInputIsValid;\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!formValid) {\r\n      return;\r\n    }\r\n    nameReset();\r\n    cityReset();\r\n    postalCodeReset();\r\n    streetReset();\r\n\r\n    const userAddressData = {\r\n      name: nameInputValue,\r\n      city: cityInputValue,\r\n      postalCode: postalCodeInputValue,\r\n      street: streetInputValue,\r\n    };\r\n\r\n    props.onPlaceOrder(userAddressData);\r\n  };\r\n  const nameClasses = `${classes.control} ${\r\n    nameHasError ? classes.invalid : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={formSubmitHandler}>\r\n      <div className={nameClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameChangeHandler}\r\n          onBlur={nameBlurHandler}\r\n          value={nameInputValue}\r\n        />\r\n        {nameHasError && (\r\n          <p className={classes.invalid}>Please enter a valid name</p>\r\n        )}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          onChange={cityChangeHandler}\r\n          onBlur={cityBlurHandler}\r\n          value={cityInputValue}\r\n        />\r\n        {cityHasError && (\r\n          <p className={classes.invalid}>Please enter a valid city name</p>\r\n        )}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"post\"\r\n          onChange={postalCodeChangeHandler}\r\n          onBlur={postalCodeBlurHandler}\r\n          value={postalCodeInputValue}\r\n        />\r\n        {postalCodeHasError && (\r\n          <p className={classes.invalid}>Please enter a valid pinCode</p>\r\n        )}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"village\">Village/street</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"village\"\r\n          onChange={streetChangeHandler}\r\n          onBlur={streetBlurHandler}\r\n          value={streetInputValue}\r\n        />\r\n        {streetHasError && (\r\n          <p className={classes.invalid}>Please enter a valid street name</p>\r\n        )}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" className={classes.submit}>\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","G:\\Udemy React\\food-order-project\\src\\Hooks\\use-input.jsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]